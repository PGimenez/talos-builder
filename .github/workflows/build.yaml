on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch: {}

jobs:
  build:
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4
      - uses: imjasonh/setup-crane@v0.4
        with:
          version: v0.20.5
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: pgimenez
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up GitHub Actions bot user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Prepare (checkouts & patches)
        env:
          DOCKER_DEFAULT_PLATFORM: linux/arm64
        run: make checkouts patches

      # - name: Kernel
      #   run: make kernel

      # - name: Overlay
      #   run: make overlay

      - name: Installer (raw image)
        run: |
          make installer \
            ARCH=arm64 PLATFORM=linux/arm64 INSTALLER_ARCH=arm64 \
            KERNEL_IMAGE=ghcr.io/pgimenez/kernel:v1.10.0-1-gede0d61 \
            OVERLAY_IMAGE=ghcr.io/pgimenez/sbc-raspberrypi5:7d04484-v1.10.0-1-gede0d61
          ls -lh checkouts/talos/_out/metal-arm64.raw.zst  # sanity check

      # ... your Create GitHub Release step already attaches:
      # ./checkouts/talos/_out/metal-arm64.raw.zst
      # - name: Installer
      #   run: make installer

      - name: Release
        if: startsWith(github.ref, 'refs/tags/v')
        run: make release

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NOTES=$(cat <<EOF
          > ‚ö†Ô∏è Experimental build, use at your own risk.

          This is a patched version of Talos tailored for the Raspberry Pi 5, including NVMe, NIC and USB support.

          ### What's available

          - üì¶ **Raw disk image** (\`metal-arm64.raw.zst\`) for fresh installs
          - ‚öôÔ∏è  **Installer image** (\`ghcr.io/talos-rpi5/installer:${{ github.ref_name }}\`) for upgrades

          ### Install

          - **Fresh install**
            - Download the raw disk image from this release
            - Flash with \`dd\` or your favorite tool

          - **Upgrade existing node**
            \`\`\`bash
            talosctl upgrade --nodes <NODE_IP> --image ghcr.io/talos-rpi5/installer:${{ github.ref_name }}
            \`\`\`

          EOF
          )
          gh release create \
            ${{ github.ref_name }} \
            ./checkouts/talos/_out/metal-arm64.raw.zst \
            --title "${{ github.ref_name }}" \
            --notes "$NOTES"
